@using Newtonsoft.Json
@using BSheets.Models.Custom

@model ViewModel

@{
    ViewBag.Title = "Customer";
}

<div>
    <h4>@ViewBag.Title</h4>
    <hr />
    @Html.ActionLink("Add", "Add", null, new { @class = "btn btn-default btn-sm" })
    <table id="Companies" class="table">
        <tr>
            <th>
                Id
            </th>
            <th>
                Company Id
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Customer Company
            </th>
            <th>
                Primary Phone
            </th>
            <th>
                Alternate Phone
            </th>
            <th>
                Fax
            </th>
            <th>
                Website
            </th>
            <th>
                Email
            </th>
            <th>
                Terms
            </th>
            <th>
                Billing Address
            </th>
            <th>
                Shipping Address
            </th>
            <th>
                Preferred Payment Method
            </th>
            <th>
                Preferred Delivery Method
            </th>
            <th>
                Exemption Details
            </th>
            <th>
                Actions
            </th>
            <th>
            </th>
        </tr>

        @foreach (var item in Model.Customers)
        {
            var itemCustomer = Json.Decode<Customer>(item.Obj_Data);
            long primary = 0, alternate = 0, fax = 0;

            long.TryParse(itemCustomer.Primary_Phone, out primary);
            long.TryParse(itemCustomer.Alternate_Phone, out alternate);
            long.TryParse(itemCustomer.Fax, out fax);
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.Raw(itemCustomer.Company_Id)
            </td>
            <td>
                @Html.Raw(itemCustomer.Customer_Name)
            </td>
            <td>
                @Html.Raw(itemCustomer.Customer_Company)
            </td>

            <td>
                @Html.Raw("<a href=\"tel:" + itemCustomer.Primary_Phone + "\">" + String.Format("{0:(###) ###-####}", primary) + "</a>")
            </td>
            <td>
                @Html.Raw("<a href=\"tel:" + itemCustomer.Alternate_Phone + "\">" + String.Format("{0:(###) ###-####}", alternate) + "</a>")
            </td>
            <td>
                @Html.Raw("<a href=\"fax:" + itemCustomer.Fax + "\">" + String.Format("{0:(###) ###-####}", fax) + "</a>")
            </td>
            
            <td>
                @Html.Raw(itemCustomer.Website)
            </td>

            @{
                string[] emails = itemCustomer.Emails.Split(new char[] { '\n', ',' });
            }

            @foreach (var email in emails)
            {
                <td>
                    @Html.Raw("<a href=\"mailto:" + email + "\">" + email + "</a>")
                </td>
            }

            <td>
                @Html.Raw(itemCustomer.Terms)
            </td>

            <td>
                @Html.Raw(itemCustomer.Billing_Address)
            </td>
            <td>
                @Html.Raw(itemCustomer.Shipping_Address)
            </td>
            
            <td>
                @Html.Raw(itemCustomer.Payment_Preference)
            </td>
            <td>
                @Html.Raw(itemCustomer.Delivery_Preference)
            </td>
            
            <td>
                @Html.Raw(itemCustomer.Exemptions)
            </td>

            <td>
                @Html.ActionLink("Update", "Update", new { id = item.Id }, htmlAttributes: new { @id = "Update", @class = "btn btn-default btn-sm" })
            </td>

            <td>
                @Html.ActionLink("Remove", "Remove", new { id = item.Id }, htmlAttributes: new { @id = "Remove", @class = "btn btn-default btn-sm" })
            </td>
        </tr>
        }
    </table>
</div>
